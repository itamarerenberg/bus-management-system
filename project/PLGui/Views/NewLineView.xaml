<Window x:Class="PLGui.NewLineView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:viewmodels="clr-namespace:PLGui.ViewModels"
        xmlns:y="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:PLGui.Models.PO"
        mc:Ignorable="d"
        Title="NewLineView" x:Name="NewLineWindow" Height="600" Width="900" >
    <y:Interaction.Triggers>
        <y:EventTrigger EventName="Loaded">
            <y:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=NewLineWindow}"/>
        </y:EventTrigger>
    </y:Interaction.Triggers>
    <Window.DataContext>
        <viewmodels:NewLineViewModel x:Name="vModel"/>
    </Window.DataContext>
    <Window.Resources>
        <ObjectDataProvider x:Key="EnumBinding" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:AreasEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <viewmodels:Bool_converter_to_visibility x:Key="Bool_converter_to_visibility" />

        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>

        <Label Content="add/remove a station to/from the new line by double click on the station" Grid.Column="0" Grid.Row="0" VerticalAlignment="Bottom"/>

        <StackPanel Grid.Column="0" Grid.Row="1" Margin="10">
            <StackPanel Orientation="Horizontal">
                <StackPanel>
                    <TextBlock Text="line number" HorizontalAlignment="Left"/>
                    <TextBox x:Name="LNum" Text="{Binding TempLine.LineNumber, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" HorizontalAlignment="Left" MinWidth="80" Height="22" IsEnabled="{Binding NewLineMode, Mode=OneTime}" />
                </StackPanel>
                <StackPanel Margin="15,0,0,0">
                    <TextBlock Text="Area" HorizontalAlignment="Left"/>
                    <ComboBox ItemsSource="{Binding Source={StaticResource EnumBinding}}" SelectedItem="{Binding Path=TempLine.Area}" HorizontalAlignment="Left" MinWidth="80" IsEditable="{Binding NewLineMode, Mode=OneTime}"/>
                </StackPanel>
                <CheckBox Content="add dis/time manually" IsChecked="{Binding AddManually}" VerticalAlignment="Bottom" Margin="15,0,0,0"/>
            </StackPanel>

            <ListView x:Name="StationList" Margin="10" VerticalAlignment="Top" ItemsSource="{Binding Stations}" Width="auto">
                <y:Interaction.Triggers>
                    <y:EventTrigger EventName="MouseDoubleClick">
                        <y:InvokeCommandAction Command="{Binding DeleteStationCommand}" CommandParameter="{Binding RelativeSource=
                                         { RelativeSource FindAncestor, 
                                           AncestorType={x:Type ListView},
                                           AncestorLevel=1}}"  PassEventArgsToCommand="True"/>
                    </y:EventTrigger>
                </y:Interaction.Triggers>
                <ListView.View>
                    <GridView>
                        <GridViewColumn x:Name="Name" Header="Name" Width="auto" DisplayMemberBinding="{Binding Station.Name}" />
                        <GridViewColumn x:Name="Code" Header="Code" Width="auto" DisplayMemberBinding="{Binding Station.Code}" />
                        <GridViewColumn x:Name="dist_to_next" Header="distance to next" Width="{Binding Path=AddManually, Converter={StaticResource Bool_converter_to_visibility}}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                        <TextBox x:Name="meters" MinWidth="30" IsEnabled="{Binding NotLast}" Text="{Binding Distance, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="time_to_next" Header="time to next"  Width="{Binding Path=AddManually, Converter={StaticResource Bool_converter_to_visibility}}" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                        <TextBox x:Name="minuts" MinWidth="30" IsEnabled="{Binding NotLast}" Text="{Binding Time, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </StackPanel>
       


        <ListView x:Name="DBStationList" Grid.Row="1" Grid.Column="1" Margin="10" VerticalAlignment="Top" ItemsSource="{Binding DBStations}"  >
            <y:Interaction.Triggers>
                <y:EventTrigger EventName="MouseDoubleClick">
                    <y:InvokeCommandAction Command="{Binding SelectDBStationCommand}" CommandParameter="{Binding RelativeSource=
                                         { RelativeSource FindAncestor, 
                                           AncestorType={x:Type ListView},
                                           AncestorLevel=1}}"  PassEventArgsToCommand="True"/>
                </y:EventTrigger>
            </y:Interaction.Triggers>
            <ListView.View>
                <GridView>
                    <GridViewColumn x:Name="DBName"  Header="Name" Width="auto" DisplayMemberBinding="{Binding Name}" />
                    <GridViewColumn x:Name="DBCode"  Header="Code" Width="auto" DisplayMemberBinding="{Binding Code}" />
                    <GridViewColumn x:Name="DBAddress"  Header="Address" Width="auto" DisplayMemberBinding="{Binding Address}" />
                </GridView>
            </ListView.View>
        </ListView>
        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0" Margin="80,0,0,0">
            <TextBlock Text="sort by:" HorizontalAlignment="Left"/>
            <ComboBox x:Name="ComboBoxSearch" MinWidth="70" ItemsSource="{Binding ComboList}"/>
        </StackPanel>
        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0" Margin="180,0,0,0">
            <TextBlock Text="search:" HorizontalAlignment="Left"/>
            <TextBox x:Name="SearchBox" MinWidth="70" Height="22"  >
                <y:Interaction.Triggers>
                    <y:EventTrigger EventName="TextChanged">
                        <y:InvokeCommandAction Command="{Binding SearchCommand}" CommandParameter="{Binding RelativeSource=
                                         { RelativeSource FindAncestor, 
                                           AncestorType={x:Type TextBox},
                                           AncestorLevel=1}}" PassEventArgsToCommand="True"/>
                    </y:EventTrigger>
                </y:Interaction.Triggers>
            </TextBox>
        </StackPanel>
        
        <Button x:Name="AddLineButton" Content="{Binding buttonCaption, Mode=OneTime}" Command="{Binding AddLineButton}" CommandParameter="{Binding ElementName=NewLineWindow}" Grid.Column="1" Grid.Row="2" VerticalAlignment="Bottom" Margin="10,10,40,10" Width="70" Height="30" HorizontalAlignment="Right">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="IsEnabled" Value="false" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=LNum, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding IsMinStation}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="true" />
                            <Setter Property="FocusManager.IsFocusScope" Value="True"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</Window>
