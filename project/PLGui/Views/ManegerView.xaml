<Window x:Class="PLGui.ManegerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:y="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:viewmodels="clr-namespace:PLGui.ViewModels"
        mc:Ignorable="d"
        Title="Maneger" x:Name="ManegerWindow" MinHeight="700" MinWidth="1000">
    <Window.DataContext>
        <viewmodels:ManegerViewModel x:Name="vModel"/>
    </Window.DataContext>
    <Window.Resources>
        <viewmodels:Text_converter_to_visibility x:Key="text_converter_to_visibility" />
        <ContextMenu x:Key="rightClickMenuStrip">
            <MenuItem Header="update"/>
            <MenuItem Header="delete"/>
        </ContextMenu>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="70"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Menu VerticalAlignment="Stretch" HorizontalAlignment="Left"  Grid.ColumnSpan="2" Grid.Row="0">
            <MenuItem Header="new" Height="25">
                <MenuItem Header="new line" Command="{Binding NewLine}"/>
                <MenuItem Header="new bus" />
                <MenuItem Header="new station" />
            </MenuItem>
            <MenuItem Header="update">
                <MenuItem Header="update line"/>
                <MenuItem Header="update bus" />
                <MenuItem Header="update station" />
            </MenuItem>
            <MenuItem Header="exit">
                <MenuItem Header="enter as passenger"/>
                <MenuItem Header="enter as manager"/>
            </MenuItem>
        </Menu>
        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Margin="25,0,0,0">
            <TextBlock Text="sort by:" HorizontalAlignment="Left"/>
            <ComboBox x:Name="ComboBoxSearch" MinWidth="70" />
        </StackPanel>
        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Margin="100,0,0,0">
            <TextBlock Text="search:" HorizontalAlignment="Left"/>
            <TextBox x:Name="SearchBox" MinWidth="70" Height="22"  >
                <y:Interaction.Triggers>
                    <y:EventTrigger EventName="TextChanged">
                        <y:InvokeCommandAction Command="{Binding SearchCommand}" CommandParameter="{Binding ElementName=ManegerWindow}" />
                    </y:EventTrigger>
                </y:Interaction.Triggers>
            </TextBox>
        </StackPanel>
        <TabControl x:Name="mainTab" SelectedItem="{Binding SelectedTabItem}" Grid.Column="0" Grid.Row="2" Grid.RowSpan="2" Margin="25,0,25,25"  SelectedIndex="0">
            <y:Interaction.Triggers>
                <y:EventTrigger EventName="SelectionChanged">
                    <y:InvokeCommandAction Command="{Binding TabChangedCommand}" CommandParameter="{Binding ElementName=ManegerWindow}"/>
                </y:EventTrigger>
            </y:Interaction.Triggers>
            <TabItem x:Name="Stations_view" Header="Stations" >
                <ListView x:Name="StationList" HorizontalAlignment="Left" Margin="10" VerticalAlignment="Top" ItemsSource="{Binding Stations}">
                    <y:Interaction.Triggers>
                        <y:EventTrigger EventName="SelectionChanged">
                            <y:InvokeCommandAction Command="{Binding ListChangedCommand}" 
                                                   CommandParameter="{Binding RelativeSource={ RelativeSource FindAncestor, AncestorType={x:Type ListView}, AncestorLevel=1}}"
                                                   PassEventArgsToCommand="True"/>
                        </y:EventTrigger>
                        <y:EventTrigger EventName="MouseRightButtonDown">
                            <y:InvokeCommandAction Command="{Binding ListChangedCommand}" 
                                                   CommandParameter="{Binding RelativeSource={ RelativeSource FindAncestor, AncestorType={x:Type ListView}, AncestorLevel=1}}"
                                                   PassEventArgsToCommand="True"/>
                        </y:EventTrigger>
                    </y:Interaction.Triggers>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn x:Name="Name"  Header="Name" Width="auto" DisplayMemberBinding="{Binding Name}" />
                            <GridViewColumn x:Name="Code"  Header="Code" Width="auto" DisplayMemberBinding="{Binding Code}" />
                            <GridViewColumn x:Name="Address"  Header="Address" Width="auto" DisplayMemberBinding="{Binding Address}" />
                            <GridViewColumn x:Name="Lines"  Header="Lines" Width="auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate >
                                        <ComboBox x:Name="LinesComboBox" ItemsSource="{Binding LinesNums}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <TabItem x:Name="Lines_view" Header="Lines" >
                <ListView x:Name="LinesList" HorizontalAlignment="Left" Margin="10" VerticalAlignment="Top" ItemsSource="{Binding Lines}">
                    <y:Interaction.Triggers>
                        <y:EventTrigger EventName="SelectionChanged">
                            <y:InvokeCommandAction Command="{Binding ListChangedCommand}" CommandParameter="{Binding RelativeSource=
                                         { RelativeSource FindAncestor, 
                                           AncestorType={x:Type ListView},
                                           AncestorLevel=1}}"  PassEventArgsToCommand="True"/>
                        </y:EventTrigger>
                    </y:Interaction.Triggers>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn x:Name="LineNumber"  Header="Line Number" Width="auto" DisplayMemberBinding="{Binding LineNumber}" />
                            <GridViewColumn x:Name="Area"  Header="Area" Width="auto" DisplayMemberBinding="{Binding Area}" />
                            <GridViewColumn x:Name="Stations"  Header="Stations" Width="auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox x:Name="LinesComboBox" BindingGroup="{Binding Stations}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
        </TabControl>



        <GroupBox Header="details" Grid.Row="3" Grid.Column="1" Margin="10">
            <StackPanel Margin="10" VerticalAlignment="Stretch">
                <TextBlock x:Name="Header1" Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource text_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                <Label x:Name="content1" Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource text_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" BorderThickness="2" HorizontalAlignment="Right"/>
                <TextBlock x:Name="Header2" Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource text_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                <Label x:Name="content2" Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource text_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" BorderThickness="2" HorizontalAlignment="Right"/>
                <TextBlock x:Name="Header3" Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource text_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                <Label x:Name="content3" Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource text_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" BorderThickness="2" HorizontalAlignment="Right"/>
                <TextBlock x:Name="Header4" Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource text_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                <Label x:Name="content4" Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource text_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" BorderThickness="2" HorizontalAlignment="Right"/>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                    <Button x:Name="DeleteButton" Content="delete" Margin="10" Command="{Binding DeleteCommand}" CommandParameter="{Binding ElementName=ManegerWindow}" Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource text_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                    <Button x:Name="UpdateButton" Content="update" Margin="10" Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource text_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>
    </Grid>
    
</Window>
