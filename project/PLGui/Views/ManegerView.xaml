<Window x:Class="PLGui.ManegerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:y="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewmodels="clr-namespace:PLGui.utilities"
        xmlns:utilities="clr-namespace:PLGui.utilities"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        mc:Ignorable="d"
        
        Title="Maneger window" x:Name="ManegerWindow" MinHeight="700" MinWidth="1000"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="{materialDesign:MaterialDesignFont}" ShowInTaskbar="True">
    <y:Interaction.Triggers>
        <y:EventTrigger EventName="Loaded">
            <y:InvokeCommandAction Command="{Binding WindowLoaded_Command}" CommandParameter="{Binding ElementName=ManegerWindow}"/>
        </y:EventTrigger>
    </y:Interaction.Triggers>
    <Window.DataContext>
        <viewmodels:ManegerViewModel x:Name="vModel"/>
    </Window.DataContext>
    <Window.Resources>
        <utilities:Bool_converter_to_visibility x:Key="Bool_converter_to_visibility" />
        <utilities:Type_converter_to_visibility x:Key="Type_converter_to_visibility" />
        <ContextMenu x:Key="RightClickMenuStrip" DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Update" Icon="{materialDesign:PackIcon Kind=Update}" Command="{Binding UpdateCommand, diag:PresentationTraceSources.TraceLevel=High}" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
            <MenuItem Header="Delete" Icon="{materialDesign:PackIcon Kind=Delete}"  />
        </ContextMenu>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="70"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--#region Menu -->
        <Menu VerticalAlignment="Stretch" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Row="0" Margin="20,0,0,0">
            <MenuItem Header="New" Height="25">
                <MenuItem Header="new line" Command="{Binding NewLine}" Icon="{materialDesign:PackIcon Kind=Plus}"/>
                <MenuItem Header="new bus" Icon="{materialDesign:PackIcon Kind=Plus}"/>
                <MenuItem Header="new station" Command="{Binding NewStation}" Icon="{materialDesign:PackIcon Kind=Plus}"/>
            </MenuItem>
            <MenuItem Header="Update" Height="25">
                <MenuItem Header="update line" Command="{Binding UpdateCommand}"/>
                <MenuItem Header="update bus" />
                <MenuItem Header="update station" />
            </MenuItem>
            <MenuItem Header="Exit" Height="25">
                <MenuItem Header="Log out" Command="{Binding Enter_asAnotherUserCommand}" CommandParameter="{Binding ElementName=ManegerWindow}" Icon="{materialDesign:PackIcon Kind=LocationExit}"/>
                <MenuItem Header="Exit" Command="{Binding manegerView_ClosingCommand}" CommandParameter="{Binding ElementName=ManegerWindow}" Icon="{materialDesign:PackIcon Kind=Power}"/>
            </MenuItem>
        </Menu>
        <!--#endregion-->

        <!--#region Clock Dialog -->
        <materialDesign:DialogHost x:Name="ClockDialog" Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center">
            <StackPanel Orientation="Horizontal" >
                <TextBlock Text="{Binding Time.TimeOfDay, StringFormat=t}"  VerticalAlignment="Center" FontSize="24" />
                <Button Margin="8,0,0,2.8" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" ToolTip="set the simulator clock"
                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" Height="22" Width="22" VerticalAlignment="Bottom">
                    <Button.CommandParameter>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <materialDesign:Clock DisplayAutomation="ToSeconds" Is24Hours="True" x:Name="Clock" />
                            <StackPanel Grid.Row="1"  Margin="8" HorizontalAlignment="Right" Orientation="Horizontal">
                                <Button Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="0"  Content="CANCEL" />
                                <Button Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="1"  Content="OK" />
                            </StackPanel>
                        </Grid>
                    </Button.CommandParameter>
                    <materialDesign:PackIcon  Kind="ClockOutline"/>
                </Button>
                <Button Style="{StaticResource MaterialDesignIconButton}" x:Name="PlayButton" ToolTip="Play" 
                        Command="{Binding Play_Command}">
                    <materialDesign:PackIcon Kind="Play" Width="40" Height="40" />
                </Button>
            </StackPanel>
        </materialDesign:DialogHost>
        <!--#endregion-->

        <!--#region search area -->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Margin="0,0,25,0">
            <ComboBox x:Name="ComboBoxSearch" MinWidth="70" Margin="10,0,0,0" Style="{StaticResource MaterialDesignOutlinedComboBox}" materialDesign:HintAssist.Hint="sort by"/>
            <materialDesign:PackIcon Kind="Magnify" Margin="10,0,0,0" VerticalAlignment="Center"/>
            <TextBox x:Name="SearchBox" MinWidth="100" Margin="0,0,0,0" materialDesign:HintAssist.Hint="Search" Style="{StaticResource MaterialDesignOutlinedTextBox}"
            materialDesign:TextFieldAssist.DecorationVisibility="Hidden">
                <y:Interaction.Triggers>
                    <y:EventTrigger EventName="TextChanged">
                        <y:InvokeCommandAction Command="{Binding SearchCommand}" CommandParameter="{Binding ElementName=ManegerWindow}" />
                    </y:EventTrigger>
                </y:Interaction.Triggers>
            </TextBox>
        </StackPanel>
        <!--#endregion-->

        <!--#region buttons -->
        <Button Content="{materialDesign:PackIcon Kind=BackupRestore, Size=25}" ToolTip="Back" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                Command="{Binding BackCommand}" CommandParameter="{Binding ElementName=ManegerWindow}"
                IsEnabled="{Binding StackIsNotEmpty}"
            Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"/>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="1" Grid.Column="1">
            <Button x:Name="DeleteButton" Content="{materialDesign:PackIcon Kind=Delete, Size=25}" ToolTip="Delete" Margin="10" Command="{Binding DeleteCommand}"  Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource Bool_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"/>
            <Button x:Name="UpdateButton" Content="{materialDesign:PackIcon Kind=Update, Size=25}" ToolTip="Update" Margin="10" Command="{Binding UpdateCommand}"  Visibility="{Binding Path=IsSelcetdItemList, Converter={StaticResource Bool_converter_to_visibility}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"/>
        </StackPanel>
        <!--#endregion-->

        <!--#region Tab control -->
        <TabControl x:Name="mainTab" SelectedItem="{Binding SelectedTabItem}" Grid.Column="0" Grid.Row="2" Grid.RowSpan="3" Margin="25,0,25,25"
                    SelectedIndex="0" Width="auto" 
                    Style="{StaticResource MaterialDesignNavigatilRailTabControl}" materialDesign:ColorZoneAssist.Mode="PrimaryMid" TabStripPlacement="Left" 
                      materialDesign:ShadowAssist.ShadowDepth="Depth3">
            <y:Interaction.Triggers>
                <y:EventTrigger EventName="SelectionChanged">
                    <y:InvokeCommandAction Command="{Binding TabChangedCommand}" CommandParameter="{Binding ElementName=ManegerWindow}"/>
                </y:EventTrigger>
            </y:Interaction.Triggers>

            <!--#region stations -->
            <TabItem x:Name="Stations_view" Tag="Stations"
                     Style="{StaticResource MaterialDesignNavigationRailTabItem}">
                <TabItem.Header>
                    <Grid ToolTip="Station">
                        <Label Content="{materialDesign:PackIcon Kind=BusStopCovered, Size=24}"/>
                    </Grid>
                </TabItem.Header>
                <ListView x:Name="StationList" HorizontalAlignment="Left" ItemsSource="{Binding Stations}" SelectionMode="Single" FontSize="12">
                    <y:Interaction.Triggers>
                        <y:EventTrigger EventName="SelectionChanged">
                            <y:InvokeCommandAction Command="{Binding ListChangedCommand}" CommandParameter="{Binding ElementName=ManegerWindow}"/>
                        </y:EventTrigger>
                    </y:Interaction.Triggers>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn x:Name="Name"  Header="Name" Width="auto" DisplayMemberBinding="{Binding Name}" />
                            <GridViewColumn x:Name="Code"  Header="Code" Width="auto" DisplayMemberBinding="{Binding Code}" />
                            <GridViewColumn x:Name="Address"  Header="Address" Width="auto" DisplayMemberBinding="{Binding Address}" />
                            <GridViewColumn x:Name="Lines"  Header="Lines" Width="auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate >
                                        <ComboBox x:Name="LinesComboBox" ItemsSource="{Binding LinesNums}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <!--#endregion-->

            <!--#region Lines -->
            <TabItem x:Name="Lines_view" Tag="Lines"
                     Style="{StaticResource MaterialDesignNavigationRailTabItem}">
                <TabItem.Header>
                    <Grid ToolTip="Lines">
                        <Label Content="{materialDesign:PackIcon Kind=TransitConnection, Size=24}"/>
                    </Grid>
                </TabItem.Header>
                <ListView x:Name="LinesList" HorizontalAlignment="Left" Margin="10" VerticalAlignment="Top" ItemsSource="{Binding Lines}">
                    <y:Interaction.Triggers>
                        <y:EventTrigger EventName="SelectionChanged">
                            <y:InvokeCommandAction Command="{Binding ListChangedCommand}" CommandParameter="{Binding ElementName=ManegerWindow}"/>
                        </y:EventTrigger>
                    </y:Interaction.Triggers>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn x:Name="LineNumber"  Header="Line Number" Width="auto" DisplayMemberBinding="{Binding LineNumber}" />
                            <GridViewColumn x:Name="Area"  Header="Area" Width="auto" DisplayMemberBinding="{Binding Area}" />
                            <GridViewColumn x:Name="FStation" Header="First Station" DisplayMemberBinding="{Binding FirstStation.StationNumber}" Width="auto"/>
                            <GridViewColumn x:Name="LStation" Header="Last Station" DisplayMemberBinding="{Binding LastStation.StationNumber}" Width="auto"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <!--#endregion-->

            <!--#region Line Trips -->
            <TabItem x:Name="LineTrip_view" Tag="LineTrips"
                     Style="{StaticResource MaterialDesignNavigationRailTabItem}">
                <TabItem.Header>
                    <Grid ToolTip="Line trips">
                        <Label Content="{materialDesign:PackIcon Kind=BusClock, Size=24}" />
                    </Grid>
                </TabItem.Header>
                <ListView x:Name="LinesTripList" HorizontalAlignment="Left" Margin="10" VerticalAlignment="Top" ItemsSource="{Binding LineTrips}">
                    <y:Interaction.Triggers>
                        <y:EventTrigger EventName="SelectionChanged">
                            <y:InvokeCommandAction Command="{Binding ListChangedCommand}" CommandParameter="{Binding ElementName=ManegerWindow}"/>
                        </y:EventTrigger>
                    </y:Interaction.Triggers>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn x:Name="LineId"  Header="Line Id" Width="auto" DisplayMemberBinding="{Binding LineId}" />
                            <GridViewColumn x:Name="StartTime"  Header="Start Time" Width="auto" DisplayMemberBinding="{Binding StartTime}" />
                            <GridViewColumn x:Name="Finish"  Header="Finish" Width="auto" DisplayMemberBinding="{Binding Finish}"/>
                            <GridViewColumn x:Name="Frequency"  Header="Frequency" Width="auto" DisplayMemberBinding="{Binding Frequency}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <!--#endregion-->

            <!--#region Buses -->
            <TabItem x:Name="Bus_view" Tag="Buses"
                     Style="{StaticResource MaterialDesignNavigationRailTabItem}">
                <TabItem.Header>
                    <Grid ToolTip="Buses">
                        <Label Content="{materialDesign:PackIcon Kind=BusMultiple, Size=24}" />
                    </Grid>
                </TabItem.Header>
                <ListView x:Name="BusesList" HorizontalAlignment="Left" Margin="10" VerticalAlignment="Top" ItemsSource="{Binding Buses, UpdateSourceTrigger=PropertyChanged}">
                    <y:Interaction.Triggers>
                        <y:EventTrigger EventName="SelectionChanged">
                            <y:InvokeCommandAction Command="{Binding ListChangedCommand}" CommandParameter="{Binding ElementName=ManegerWindow}"/>
                        </y:EventTrigger>
                    </y:Interaction.Triggers>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn x:Name="LicensNumber" Header="License Number" Width="auto" DisplayMemberBinding="{Binding LicenseNumber, StringFormat=000-00-000}"  />
                            <GridViewColumn x:Name="Stat"  Header="Status" Width="auto" DisplayMemberBinding="{Binding Stat}" />
                            <GridViewColumn x:Name="Fuel"  Header="Fuel" Width="auto" DisplayMemberBinding="{Binding Fule}"/>
                            <GridViewColumn x:Name="Kilometraz"  Header="Kilometraz" Width="auto" DisplayMemberBinding="{Binding Kilometraz}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <!--#endregion-->

        </TabControl>
        <!--#endregion-->

        <!--#region Line Details -->
        <Grid x:Name="LineDetails" Grid.RowSpan="3" Grid.Row="2" Grid.Column="1" Margin="5"
                    Visibility="{Binding SelectedTabItem, Converter={StaticResource Type_converter_to_visibility}, ConverterParameter={x:Reference Lines_view}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Expander Header="Line details" Grid.Row="0" Margin="5" Background="#FFB3EF7C">
                <WrapPanel Background="White" DataContext="{Binding LineDisplay}" >
                    <StackPanel>
                        <TextBlock Text="Line Number:"/>
                        <Label Content="{Binding LineNumber}" BorderThickness="2" HorizontalAlignment="Right" />
                    </StackPanel>
                    <StackPanel Margin="10,0,0,0">
                        <TextBlock Text="Area"/>
                        <Label Content="{Binding Area}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                </WrapPanel>
            </Expander>
            <GroupBox Header="Line stations list" Grid.Row="1" Margin="5">
                <ListView x:Name="LineStations_view" VerticalAlignment="Top" ItemsSource="{Binding LineDisplay.Stations}" ToolTip="press twice and see the station details" >
                    <ListView.View>
                        <GridView>
                            <GridViewColumn x:Name="SNumber"  Header="Station Number" Width="auto" DisplayMemberBinding="{Binding StationNumber}" />
                            <GridViewColumn x:Name="Distance"  Header="Distance from start" Width="auto" DisplayMemberBinding="{Binding PrevToCurrent.Distance, StringFormat={}{0:F2}km}" />
                            <GridViewColumn x:Name="Time"  Header="Estimate time" Width="auto" DisplayMemberBinding="{Binding PrevToCurrent.Time, StringFormat={}{0:hh':'mm':'ss}}" />
                        </GridView>
                    </ListView.View>
                </ListView>
            </GroupBox>
            <GroupBox Header="Line trips" Grid.Row="2" Margin="5">
                <ListView x:Name="LineTrip_Details" HorizontalAlignment="Left" Margin="10" VerticalAlignment="Top" ItemsSource="{Binding LineDisplay.LineTrips}">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Start Time" Width="auto" DisplayMemberBinding="{Binding StartTime}" />
                            <GridViewColumn Header="Finish" Width="auto" DisplayMemberBinding="{Binding Finish}"/>
                            <GridViewColumn Header="Frequency" Width="auto" DisplayMemberBinding="{Binding Frequency}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </GroupBox>
            <Button Content="{materialDesign:PackIcon Kind=Plus}" ToolTip="Add new line trip" Grid.Row="2" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="10" Command="{Binding NewLineTrip}" CommandParameter="{Binding ElementName=ManegerWindow}" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"/>
        </Grid>
        <!--#endregion-->

        <!--#region Station Details -->
        <Grid x:Name="StationDetails" Margin="5" Grid.Row="2" Grid.Column="1"  
                Visibility="{Binding Path=SelectedTabItem, Converter={StaticResource Type_converter_to_visibility}, ConverterParameter={x:Reference Stations_view}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Expander Header="Station details" Grid.Row="0" Margin="5" Background="#FFB3EF7C">
                <WrapPanel Background="White" DataContext="{Binding StationDisplay}">
                    <StackPanel>
                        <TextBlock Text="Name:"/>
                        <Label Content="{Binding Name}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                    <StackPanel Margin="10,0,0,0">
                        <TextBlock Text="Code:"/>
                        <Label Content="{Binding Code}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                    <StackPanel Margin="10,0,0,0" >
                        <TextBlock Text="Address:" />
                        <Label Content="{Binding Address}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                    <StackPanel Margin="10,0,0,0">
                        <TextBlock Text="Location:" />
                        <Label Content="{Binding Location}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                </WrapPanel>
            </Expander>
            <GroupBox Header="Line Passes list" Grid.Row="1" Margin="5">
                <ListView x:Name="LinePasses_view" Margin="10" VerticalAlignment="Top" ItemsSource="{Binding LinesOfStation}">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Line Number" Width="auto" DisplayMemberBinding="{Binding LineNumber}" />
                            <GridViewColumn Header="Area" Width="auto" DisplayMemberBinding="{Binding Area}" />
                            <GridViewColumn Header="First Station" DisplayMemberBinding="{Binding FirstStation.StationNumber}" Width="auto"/>
                            <GridViewColumn Header="Last Station" DisplayMemberBinding="{Binding LastStation.StationNumber}" Width="auto"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </GroupBox>
        </Grid>
        <!--#endregion-->

        <!--#region Line trip Details -->
        <Grid x:Name="LineTripDetails" Grid.Row="2" Grid.Column="1" Margin="5"
                Visibility="{Binding Path=SelectedTabItem, Converter={StaticResource Type_converter_to_visibility}, ConverterParameter={x:Reference LineTrip_view}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Expander Header="Line trip details" Grid.Row="0" Margin="5" Background="#FFB3EF7C">
                <WrapPanel Background="White" DataContext="{Binding LineTripDisplay}" >
                    <StackPanel>
                        <TextBlock Text="Start:"/>
                        <Label Content="{Binding StartTime}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                    <StackPanel Margin="10,0,0,0">
                        <TextBlock Text="Finish:"/>
                        <Label Content="{Binding Finish}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                    <StackPanel Margin="10,0,0,0" >
                        <TextBlock Text="Frequency:" />
                        <Label Content="{Binding Frequency}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                </WrapPanel>
            </Expander>
        </Grid>
        <!--#endregion-->

        <!--#region Bus Details -->
        <Grid x:Name="BusDetails" Grid.Row="2" Grid.Column="1" Margin="5"
                Visibility="{Binding Path=SelectedTabItem, Converter={StaticResource Type_converter_to_visibility}, ConverterParameter={x:Reference Bus_view }, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Expander Header="Bus details" Grid.Row="0" Margin="5" Background="#FFB3EF7C">
                <WrapPanel Background="White" DataContext="{Binding BusDisplay}">
                    <StackPanel>
                        <TextBlock Text="Licens Number:"/>
                        <Label Content="{Binding LicenseNumber}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                    <StackPanel Margin="10,0,0,0">
                        <TextBlock Text="Status:"/>
                        <Label Content="{Binding Stat}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                    <StackPanel Margin="10,0,0,0" >
                        <TextBlock Text="Licenes date:" />
                        <Label Content="{Binding LicenesDate}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                    <StackPanel Margin="10,0,0,0" >
                        <TextBlock Text="Fuel:" />
                        <Label Content="{Binding Fule}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                    <StackPanel Margin="10,0,0,0" >
                        <TextBlock Text="Kilometraz:" />
                        <Label Content="{Binding Kilometraz}" BorderThickness="2" HorizontalAlignment="Right"/>
                    </StackPanel>
                </WrapPanel>
            </Expander>
            <Button Content="{materialDesign:PackIcon Kind=Plus}" ToolTip="Add a random bus" Grid.Row="2" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="10" Command="{Binding RandomBus_Command}" CommandParameter="{Binding ElementName=ManegerWindow}" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"/>
        </Grid>
        <!--#endregion-->

        <materialDesign:Snackbar MessageQueue="{Binding MyMessageQueue}" Grid.Column="1" Grid.Row="4" Background="#FF016306" />

    </Grid>


</Window>
